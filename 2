#include "include/bitmap_driver.h"

uint64_t red_row_buffer = {0}; //initialises pixel_row_buffer.
uint64_t blue_row_buffer = {0};
uint64_t green_row_buffer = {0};

bool get_colour_value(uint16_t value, int iteration, int color_bitshift) {
  output = value >> color_bitshift >> iteration && 1;
  return output;
}
// gets the value of a specific colour on a specific iteration. Outputs a boolean value.

int write_to_row_buffer(int iteration, int row_number, Bitmap pixelmap,
                        uint64_t *buffer_loc) {
  int col_number = 0;
  
  while (col_number < BUFFER_SIZE_BITS) {
    pixel = pixelmap[row_number][col_number];
    
    int red = get_color_value(pixel, iteration, RED_BITSHIFT)
    int green = get_color_value(pixel, iteration, GREEN_BITSHIFT)
    int blue = get_color_value(pixel, iteration, BLUE_BITSHIFT)
    
    red_row_buffer += red << col_number;
    blue_row_number += blue << col_number;
    green_col_number += green << col_number;
  }  
} 
// Writes to the row data buffer from a bitmap.

int send_row_buffer(uint64_t *buffer_loc);
// Sends the row data out to the display, then displays it.

int clear_row_buffer(uint64_t * buffer_loc);
// clears all data currently in the row data buffer.
